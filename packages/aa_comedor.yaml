## Dispositivo ##
switch:
  - platform: broadlink
    host: 192.168.3.202
    mac: !secret broadlink_comedor_mac

climate:
  - platform: smartir
    name: AA Comedor
    device_code: 1060
    controller_send_service: switch.broadlink_send_packet_192_168_3_202
    temperature_sensor: sensor.comedor_temperatura
    humidity_sensor: sensor.comedor_humedad
    power_sensor: binary_sensor.comedor_aire_acondicionado

smartir:
  update_branch: rc

  
## Sensores ##
input_number:
  aa_comedor_temp_heat_on:
    name: Calor ON
    min: 15
    max: 22
    step: 1
    icon: mdi:trending-down
  aa_comedor_temp_heat_auto:
    name: Temperatura Calor
    min: 18
    max: 25
    step: 1
    icon: mdi:temperature-celsius
  aa_comedor_temp_cool_on:
    name: Frio ON
    min: 27
    max: 35
    step: 1
    icon: mdi:trending-up
  aa_comedor_temp_cool_auto:
    name: Temperatura Frio
    min: 25
    max: 32
    step: 1
    icon: mdi:temperature-celsius

input_datetime:
  aa_comedor_on_laborable:
    name: Hora encendido
    has_date: false
    has_time: true
  aa_comedor_off_laborable:
    name: Hora apagado
    has_date: false
    has_time: true
  aa_comedor_on_festivo:
    name: Hora encendido
    has_date: false
    has_time: true
  aa_comedor_off_festivo:
    name: Hora apagado
    has_date: false
    has_time: true


## Scripts ##
script:
  aa_comedor_off:
    sequence:
      - condition: state
        entity_id: binary_sensor.comedor_aire_acondicionado
        state: 'on'
      - service: climate.set_operation_mode
        data:
          entity_id: climate.aa_comedor
          operation_mode: "off"
          
  aa_comedor_heat:
    sequence:
      - service: climate.set_operation_mode
        data:
          entity_id: climate.aa_comedor
          operation_mode: heat
      - delay: '00:00:02'
      - service: climate.set_temperature
        data_template:
          entity_id: climate.aa_comedor
          temperature: "{{ states.input_number.aa_comedor_temp_heat_auto.state }}"
      - delay: '00:00:02'
      - service: climate.set_fan_mode
        data:
          entity_id: climate.aa_comedor
          fan_mode: high
          
  aa_comedor_cool:
    sequence:
      - service: climate.set_operation_mode
        data:
          entity_id: climate.aa_comedor
          operation_mode: cool
      - delay: '00:00:02'
      - service: climate.set_temperature
        data_template:
          entity_id: climate.aa_comedor
          temperature: "{{ states.input_number.aa_comedor_temp_cool_auto.state }}"
      - delay: '00:00:02'
      - service: climate.set_fan_mode
        data:
          entity_id: climate.aa_comedor
          fan_mode: high
          
  aa_comedor_auto:
    sequence:
      - condition: state
        entity_id: binary_sensor.comedor_aire_acondicionado
        state: 'off'
      - service_template: >
          {% if (states.sensor.comedor_temperatura.state | float) <= (states.input_number.aa_comedor_temp_cool_on.state | int) %}
            script.aa_comedor_heat
          {% elif (states.sensor.comedor_temperatura.state | float) >= (states.input_number.aa_comedor_temp_heat_on.state | int) %}
            script.aa_comedor_cool
          {% endif %}


## Automatizaciones ##
automation:
  - alias: dash1
    initial_state: true
    trigger:
      - platform: event
        event_type: dash1
    action:
      - service_template: >
          {% if is_state('binary_sensor.comedor_aire_acondicionado', 'on') %}
            script.aa_comedor_off
          {%- else -%}
            script.aa_comedor_auto
          {% endif %}

  - alias: aa_comedor_on_laborable
    trigger:
      platform: template
      value_template: "{{ states('sensor.time') == (states.input_datetime.aa_comedor_on_laborable.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      condition: state
      entity_id: 'binary_sensor.workday_sensor'
      state: 'on'
    action:
    - service: script.aa_comedor_auto
    
  - alias: aa_comedor_off_laborable
    trigger:
      platform: template
      value_template: "{{ states('sensor.time') == (states.input_datetime.aa_comedor_off_laborable.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      condition: state
      entity_id: 'binary_sensor.workday_sensor'
      state: 'on'
    action:
    - service: script.aa_comedor_off
    
  - alias: aa_comedor_on_festivo
    trigger:
      platform: template
      value_template: "{{ states('sensor.time') == (states.input_datetime.aa_comedor_on_festivo.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      condition: state
      entity_id: 'binary_sensor.workday_sensor'
      state: 'off'
    action:
    - service: script.aa_comedor_auto
    
  - alias: aa_comedor_off_festivo
    trigger:
      platform: template
      value_template: "{{ states('sensor.time') == (states.input_datetime.aa_comedor_off_festivo.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      condition: state
      entity_id: 'binary_sensor.workday_sensor'
      state: 'off'
    action:
    - service: script.aa_comedor_off

  - alias: aa_agua_msg
    trigger:
    - platform: state
      entity_id: binary_sensor.aa_agua
      to: 'on'
      for: '00:05:00'
#    condition:
#    - condition: time
#      after: '10:00:00'
#      before: '22:30:00'    
    action:
    - service: notify.domotica_en_casa
      data:
        message: "El deposito del agua del aire acondicionado empieza a estar lleno. Habría que vaciarlo"
    - delay: '24:00:00'
    - condition: state
      entity_id: binary_sensor.aa_agua
      state: 'on'
    - service: notify.domotica_en_casa
      data:
        message: "Habrá quitar el agua del aire... o eso o montamos una piscina"
    - delay: '24:00:00'
    - condition: state
      entity_id: binary_sensor.aa_agua
      state: 'on'
    - service: notify.domotica_en_casa
      data:
        message: "Eh, que han pasado dos días y el agua del aire acondicionado sigue llenandose.... \U00002744"
    - delay: '24:00:00'
    - condition: state
      entity_id: binary_sensor.aa_agua
      state: 'on'
    - service: notify.domotica_en_casa
      data:
        message: "Vale, vale, he pillado la indirecta... prefieres dejar que otro quite el agua del aire... \U0001F6A8"


## Grupo ##
group:
  aa_comedor_automatismos:
    name: Horarios programados
    icon: mdi:calendar-clock
    entities:
    - automation.aa_comedor_on_laborable
    - automation.aa_comedor_off_laborable
    - automation.aa_comedor_on_festivo
    - automation.aa_comedor_off_festivo

    
## Personalizacion ##
homeassistant:
  customize:
    binary_sensor.aa_agua:
      friendly_name: Deposito agua
    input_number.aa_comedor_temp_heat_on:
      friendly_name: Calor ON
    input_number.aa_comedor_temp_cool_on:
      friendly_name: Frio ON
    input_number.aa_comedor_temp_heat_auto:
      friendly_name: Temperatura Calor
    input_number.aa_comedor_temp_cool_auto:
      friendly_name: Temperatura Frio
    input_datetime.aa_comedor_on_laborable:
      icon: mdi:clock-outline   
    input_datetime.aa_comedor_off_laborable:
      icon: mdi:clock-outline   
    input_datetime.aa_comedor_on_festivo:
      icon: mdi:clock-outline   
    input_datetime.aa_comedor_off_festivo:
      icon: mdi:clock-outline   
    automation.aa_comedor_on_laborable:
      friendly_name: Encendido laborable
      icon: mdi:calendar-clock
    automation.aa_comedor_off_laborable:
      friendly_name: Apagado laborable
      icon: mdi:calendar-clock
    automation.aa_comedor_on_festivo:
      friendly_name: Encendido festivo
      icon: mdi:calendar-clock
    automation.aa_comedor_off_festivo:
      friendly_name: Apagado festivo
      icon: mdi:calendar-clock
    automation.aa_agua_msg:
      friendly_name: Avisos telegram
      icon: mdi:telegram
    
      